---
- name: Install Spring Cloud Config Server vulnerable to Directory Traversal (CVE-2020-5405)
  hosts: ubuntu1
  become: yes
  vars:
    spring_version: "2.1.5.RELEASE"
    install_dir: "/opt/spring-cloud"
    java_package: "openjdk-11-jdk-headless"
    source_zip: "v{{ spring_version }}.zip"
    source_dir: "spring-cloud-config-{{ spring_version }}"
    build_dir: "/tmp/spring-cloud-build"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install dependencies (Java and utilities)
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - curl
        - unzip
        - maven
        - rsync
        - "{{ java_package }}"


    - name: Create Spring Cloud installation directory
      file:
        path: "{{ install_dir }}"
        state: directory
        mode: '0755'

    - name: Create build directory
      file:
        path: "{{ build_dir }}"
        state: directory
        mode: '0755'

    - name: Copy Spring Cloud Config Server source zip to build directory
      copy:
        src: "./data/{{ source_zip }}"
        dest: "{{ build_dir }}/{{ source_zip }}"

    - name: Copy m2.tar to virtual machine
      ansible.builtin.copy:
        src: "./data/m2.tar"  
        dest: "/tmp/m2.tar"  

    - name: Ensure temporary directory exists
      ansible.builtin.file:
        path: "/tmp/m2_extracted"
        state: directory
        mode: '0755'

    - name: Extract m2.tar to temporary directory
      ansible.builtin.unarchive:
        src: "/tmp/m2.tar"
        dest: "/tmp/m2_extracted"
        remote_src: yes

    - name: Ensure temporary directory exists
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/.m2/repository"
        state: directory
        mode: '0755'

    - name: Synchronize extracted m2/repository to ~/.m2/repository
      ansible.builtin.synchronize:
        src: "/tmp/m2_extracted/m2/repository/"
        dest: "{{ ansible_user_dir }}/.m2/repository"
        recursive: yes
      delegate_to: "{{ inventory_hostname }}"
      become: yes

    - name: Extract Spring Cloud Config Server source code
      unarchive:
        src: "{{ build_dir }}/{{ source_zip }}"
        dest: "{{ build_dir }}"
        remote_src: yes
        creates: "{{ build_dir }}/{{ source_dir }}"

    - name: Run Spring Cloud Config Server with Maven
      command: mvn spring-boot:run -o
      args:
        chdir: "{{ build_dir }}/{{ source_dir }}/spring-cloud-config-server"
      environment:
        JAVA_HOME: "/usr/lib/jvm/java-11-openjdk-amd64"
        SPRING_PROFILES_ACTIVE: "native"
        SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATIONS: "file:///opt/spring-cloud"
      async: 600
      poll: 0
    
    - name: Wait for Spring Cloud Config Server to start
      wait_for:
        port: 8888
        delay: 5
        timeout: 300